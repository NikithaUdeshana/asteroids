/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.harper.asteroids;

import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.harper.asteroids.model.Feed;
import org.glassfish.jersey.client.ClientConfig;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

/**
 * Main app. Gets the list of closest asteroids from NASA at
 * https://api.nasa.gov/neo/rest/v1/feed?start_date=START_DATE&end_date=END_DATE&api_key=API_KEY
 * See documentation on the Asteroids - NeoWs API at https://api.nasa.gov/
 *
 * Prints the 10 closest
 *
 * Risk of getting throttled if we don't sign up for own key on https://api.nasa.gov/
 * Set environment variable 'API_KEY' to override.
 */
public class App {

    private static final String NEO_FEED_URL = "https://api.nasa.gov/neo/rest/v1/feed";
    private static SimpleDateFormat dateFormat = new SimpleDateFormat("YYYY-MM-dd");

    private Client client;
    private String apiKey;
    private ObjectMapper mapper = new ObjectMapper();

    public App() {
        apiKey = System.getProperty("API_KEY", "DEMO_KEY");
        ClientConfig configuration = new ClientConfig();
        client = ClientBuilder.newClient(configuration);
        mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
    }

    /**
     * Scan space for asteroids close to earth
     */
    private void checkForAsteroids() {

        Response response = client
                .target(NEO_FEED_URL)
                .queryParam("start_date", dateFormat.format(new Date()))
                .queryParam("api_key", apiKey)
                .request(MediaType.APPLICATION_JSON)
                .get();
        System.out.println("Got response: " + response);
        ObjectMapper mapper = new ObjectMapper();
        String content = response.readEntity(String.class);

        try {
            Feed neoFeed = mapper.readValue(content, Feed.class);
            System.out.println("Got neos! " + neoFeed);

        } catch (IOException e) {
            System.err.println("Failed scanning for asteroids: " + e);
        }
    }


    public static void main(String[] args) {
        new App().checkForAsteroids();
    }
}
